{"version":3,"sources":["components/Dashboard/Dashboard.module.css","components/ButtonStartStop/ButtonStartStop.module.css","App.module.css","components/ButtonWait/ButtonWait.module.css","components/ButtonReset/ButtonReset.module.css","components/ButtonStartStop/ButtonStartStop.tsx","components/ButtonWait/ButtonWait.tsx","components/ButtonReset/ButtonReset.tsx","components/Dashboard/Dashboard.tsx","App.tsx","index.tsx"],"names":["module","exports","ButtonStartStop","props","isCounting","setCounting","startTimer","resetTimer","onClick","className","cn","styles","btn","start","stop","ButtonWait","stopTimer","onDoubleClick","ButtonReset","Dashboard","h","m","s","container","card","App","useState","time","setTime","intervalId","setIntervalId","updatedS","updatedM","updatedH","run","setInterval","clearInterval","timerContainer","title","buttonsWrapper","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e90d07f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dashboard_container__3Osv9\",\"card\":\"Dashboard_card__3T_qI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ButtonStartStop_btn__Fnc1c\",\"start\":\"ButtonStartStop_start__1f1wE\",\"stop\":\"ButtonStartStop_stop__3b5y1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerContainer\":\"App_timerContainer__hCTwH\",\"title\":\"App_title__-GfWs\",\"buttonsWrapper\":\"App_buttonsWrapper__1JH3c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ButtonWait_btn__OmjBT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ButtonReset_btn__3pW96\"};","import React from 'react';\nimport cn from 'classnames';\nimport styles from './ButtonStartStop.module.css';\n\ninterface ButtonStartStopProps {\n  isCounting: boolean;\n  setCounting: (isCounting: boolean) => void;\n  startTimer: () => void;\n  resetTimer: () => void;\n}\n\nexport const ButtonStartStop = (props: ButtonStartStopProps) => {\n  const { isCounting, setCounting, startTimer, resetTimer } = props;\n  return (\n    <button\n      onClick={() => {\n        setCounting(!isCounting);\n        if (isCounting) {\n          resetTimer();\n        } else {\n          startTimer();\n        }\n      }}\n      className={cn(styles.btn, {\n        [styles.start]: !isCounting,\n        [styles.stop]: isCounting,\n      })}\n    >\n      {isCounting ? 'Stop' : 'Start'}\n    </button>\n  );\n};\n","import React from 'react';\nimport styles from './ButtonWait.module.css';\n\ninterface ButtonWaitProps {\n  isCounting: boolean;\n  setCounting: (isCounting: boolean) => void;\n  stopTimer: () => void;\n}\n\nexport const ButtonWait = (props: ButtonWaitProps) => {\n  const { isCounting, setCounting, stopTimer } = props;\n  return (\n    <button\n      onDoubleClick={() => {\n        setCounting(!isCounting);\n        if (isCounting) {\n          stopTimer();\n        }\n      }}\n      className={styles.btn}\n    >\n      Wait\n    </button>\n  );\n};\n","import React, { Dispatch, SetStateAction } from 'react';\nimport styles from './ButtonReset.module.css';\n\ninterface ButtonResetProps {\n  startTimer: () => void;\n  resetTimer: () => void;\n  setCounting: Dispatch<SetStateAction<boolean>>;\n}\n\nexport const ButtonReset = (props: ButtonResetProps) => {\n  const {startTimer, resetTimer, setCounting} = props;\n\n  return (\n    <button\n      onClick={() => {\n        resetTimer();\n        startTimer();\n        setCounting(true);\n      }}\n      className={styles.btn}\n    >\n      Reset\n    </button>\n  );\n};\n","import React from 'react';\nimport styles from \"./Dashboard.module.css\";\n\ninterface DashboardProps {\n  h: number;\n  m: number;\n  s: number;\n}\n\nexport const Dashboard = (props: DashboardProps) => {\n  const { h, m, s } = props;\n  return (\n    <div className={styles.container}>\n      <div className={styles.card}>{h < 10 ? '0' + h : h}</div>\n      :\n      <div className={styles.card}>{m < 10 ? '0' + m : m}</div>\n      :\n      <div className={styles.card}>{s < 10 ? '0' + s : s}</div>\n    </div>\n  );\n};\n","import React, { SetStateAction, useState } from 'react';\nimport { ButtonStartStop } from \"./components/ButtonStartStop/ButtonStartStop\";\nimport { ButtonWait } from \"./components/ButtonWait/ButtonWait\";\nimport { ButtonReset } from \"./components/ButtonReset/ButtonReset\";\nimport { Dashboard } from \"./components/Dashboard/Dashboard\";\nimport styles from './App.module.css';\n\nfunction App() {\n  const [isCounting, setCounting] = useState(false);\n  const [time, setTime] = useState({ s:0, m:0, h:0 });\n  const [intervalId, setIntervalId] = useState<SetStateAction<NodeJS.Timeout>>();\n\n  let updatedS = time.s, updatedM = time.m, updatedH = time.h;\n\n  const run = () => {\n    if(updatedM === 60) {\n      updatedH++;\n      updatedM = 0;\n    }\n\n    if(updatedS === 60) {\n      updatedM++;\n      updatedS = 0;\n    }\n    updatedS++;\n    setTime({ s:updatedS, m:updatedM, h:updatedH });\n  };\n\n  const startTimer = () => {\n    setIntervalId(setInterval(run, 1000));\n  };\n\n  const resetTimer = () => {\n    if (typeof intervalId === 'number') {\n      clearInterval(intervalId);\n    }\n    setTime({s: 0, m: 0, h: 0});\n    updatedS = 0;\n    updatedH = 0;\n    updatedM = 0;\n  }\n\n  const stopTimer = () => {\n    if (typeof intervalId === 'number') {\n      clearInterval(intervalId);\n    }\n  }\n\n  return (\n    <div className={styles.timerContainer}>\n      <h1 className={styles.title}>ITOP1000 Timer</h1>\n      <Dashboard\n        h={time.h}\n        m={time.m}\n        s={time.s}\n      />\n      <div className={styles.buttonsWrapper}>\n        <ButtonStartStop\n          isCounting={isCounting}\n          setCounting={setCounting}\n          startTimer={startTimer}\n          resetTimer={resetTimer}\n        />\n        <ButtonWait\n          isCounting={isCounting}\n          setCounting={setCounting}\n          stopTimer={stopTimer}\n        />\n        <ButtonReset\n          setCounting={setCounting}\n          startTimer={startTimer}\n          resetTimer={resetTimer}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}